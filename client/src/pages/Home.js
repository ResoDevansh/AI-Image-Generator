import React, { useState, useEffect } from "react";
import { Card, Loader, FormField } from "../components/index";
import "./Home.css";

const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }
  return <h2 className="alt-text-render">{title}</h2>;
};

const Home = () => {
  const [isloading, setIsLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchText, setSearchText] = useState("");

  useEffect(() => {
    const fetchPosts = async () => {
      setIsLoading(true);

      try {
        const response = await fetch("http://localhost:8080/api/v1/post", {
          method: "GET",
          headers: {
            "Content-type": "application/json",
          },
        });
        if (response.ok) {
          const result = await response.json();
          setAllPosts(result.data.reverse());
        }
      } catch (error) {
        alert(error);
      } finally {
        setIsLoading(false);
      }
    };
  }, []);

  return (
    <section>
      <div id="heading">The Community Showcase</div>
      <div id="subheading">
        Browse through a collection of imaginative and visually stunning images
        generated by DALL-E AI
      </div>
      <div className="form-field">
        <FormField labelName="Search posts" />
      </div>
      {isloading ? (
        <div className="loader">
          <Loader />{" "}
        </div>
      ) : (
        <>
          <div className="search-text">
            {searchText && (
              <h2>
                Showing results for <span>{searchText}</span>
              </h2>
            )}
          </div>
          {searchText ? (
            <RenderCards data={[]} title="No search results found" />
          ) : (
            <RenderCards data={allPosts} title="No posts yet" />
          )}
        </>
      )}
    </section>
  );
};

export default Home;
